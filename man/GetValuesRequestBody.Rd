% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_values_request_body.R
\docType{class}
\name{GetValuesRequestBody}
\alias{GetValuesRequestBody}
\title{GetValuesRequestBody}
\format{
An \code{R6Class} generator object
}
\description{
GetValuesRequestBody Class

GetValuesRequestBody Class
}
\details{
Create a new GetValuesRequestBody
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{filter}}{object [optional]}

\item{\code{order_by}}{list(\link{OrderByColumn}) [optional]}

\item{\code{search}}{character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-GetValuesRequestBody-new}{\code{GetValuesRequestBody$new()}}
\item \href{#method-GetValuesRequestBody-toJSON}{\code{GetValuesRequestBody$toJSON()}}
\item \href{#method-GetValuesRequestBody-fromJSON}{\code{GetValuesRequestBody$fromJSON()}}
\item \href{#method-GetValuesRequestBody-toJSONString}{\code{GetValuesRequestBody$toJSONString()}}
\item \href{#method-GetValuesRequestBody-fromJSONString}{\code{GetValuesRequestBody$fromJSONString()}}
\item \href{#method-GetValuesRequestBody-validateJSON}{\code{GetValuesRequestBody$validateJSON()}}
\item \href{#method-GetValuesRequestBody-toString}{\code{GetValuesRequestBody$toString()}}
\item \href{#method-GetValuesRequestBody-isValid}{\code{GetValuesRequestBody$isValid()}}
\item \href{#method-GetValuesRequestBody-getInvalidFields}{\code{GetValuesRequestBody$getInvalidFields()}}
\item \href{#method-GetValuesRequestBody-print}{\code{GetValuesRequestBody$print()}}
\item \href{#method-GetValuesRequestBody-clone}{\code{GetValuesRequestBody$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetValuesRequestBody-new"></a>}}
\if{latex}{\out{\hypertarget{method-GetValuesRequestBody-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new GetValuesRequestBody class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GetValuesRequestBody$new(filter = NULL, order_by = NULL, search = "", ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{filter}}{filter}

\item{\code{order_by}}{order_by}

\item{\code{search}}{search. Default to "".}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetValuesRequestBody-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-GetValuesRequestBody-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GetValuesRequestBody$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
GetValuesRequestBody in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetValuesRequestBody-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-GetValuesRequestBody-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of GetValuesRequestBody
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GetValuesRequestBody$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of GetValuesRequestBody
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetValuesRequestBody-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-GetValuesRequestBody-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GetValuesRequestBody$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
GetValuesRequestBody in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetValuesRequestBody-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-GetValuesRequestBody-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of GetValuesRequestBody
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GetValuesRequestBody$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of GetValuesRequestBody
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetValuesRequestBody-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-GetValuesRequestBody-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to GetValuesRequestBody and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GetValuesRequestBody$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetValuesRequestBody-toString"></a>}}
\if{latex}{\out{\hypertarget{method-GetValuesRequestBody-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GetValuesRequestBody$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of GetValuesRequestBody
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetValuesRequestBody-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-GetValuesRequestBody-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GetValuesRequestBody$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetValuesRequestBody-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-GetValuesRequestBody-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GetValuesRequestBody$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetValuesRequestBody-print"></a>}}
\if{latex}{\out{\hypertarget{method-GetValuesRequestBody-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GetValuesRequestBody$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetValuesRequestBody-clone"></a>}}
\if{latex}{\out{\hypertarget{method-GetValuesRequestBody-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GetValuesRequestBody$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
