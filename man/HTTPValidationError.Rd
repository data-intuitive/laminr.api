% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/http_validation_error.R
\docType{class}
\name{HTTPValidationError}
\alias{HTTPValidationError}
\title{HTTPValidationError}
\format{
An \code{R6Class} generator object
}
\description{
HTTPValidationError Class

HTTPValidationError Class
}
\details{
Create a new HTTPValidationError
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{detail}}{list(\link{ValidationError}) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-HTTPValidationError-new}{\code{HTTPValidationError$new()}}
\item \href{#method-HTTPValidationError-toJSON}{\code{HTTPValidationError$toJSON()}}
\item \href{#method-HTTPValidationError-fromJSON}{\code{HTTPValidationError$fromJSON()}}
\item \href{#method-HTTPValidationError-toJSONString}{\code{HTTPValidationError$toJSONString()}}
\item \href{#method-HTTPValidationError-fromJSONString}{\code{HTTPValidationError$fromJSONString()}}
\item \href{#method-HTTPValidationError-validateJSON}{\code{HTTPValidationError$validateJSON()}}
\item \href{#method-HTTPValidationError-toString}{\code{HTTPValidationError$toString()}}
\item \href{#method-HTTPValidationError-isValid}{\code{HTTPValidationError$isValid()}}
\item \href{#method-HTTPValidationError-getInvalidFields}{\code{HTTPValidationError$getInvalidFields()}}
\item \href{#method-HTTPValidationError-print}{\code{HTTPValidationError$print()}}
\item \href{#method-HTTPValidationError-clone}{\code{HTTPValidationError$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-HTTPValidationError-new"></a>}}
\if{latex}{\out{\hypertarget{method-HTTPValidationError-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new HTTPValidationError class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{HTTPValidationError$new(detail = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{detail}}{detail}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-HTTPValidationError-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-HTTPValidationError-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{HTTPValidationError$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
HTTPValidationError in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-HTTPValidationError-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-HTTPValidationError-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of HTTPValidationError
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{HTTPValidationError$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of HTTPValidationError
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-HTTPValidationError-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-HTTPValidationError-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{HTTPValidationError$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
HTTPValidationError in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-HTTPValidationError-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-HTTPValidationError-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of HTTPValidationError
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{HTTPValidationError$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of HTTPValidationError
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-HTTPValidationError-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-HTTPValidationError-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to HTTPValidationError and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{HTTPValidationError$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-HTTPValidationError-toString"></a>}}
\if{latex}{\out{\hypertarget{method-HTTPValidationError-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{HTTPValidationError$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of HTTPValidationError
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-HTTPValidationError-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-HTTPValidationError-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{HTTPValidationError$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-HTTPValidationError-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-HTTPValidationError-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{HTTPValidationError$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-HTTPValidationError-print"></a>}}
\if{latex}{\out{\hypertarget{method-HTTPValidationError-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{HTTPValidationError$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-HTTPValidationError-clone"></a>}}
\if{latex}{\out{\hypertarget{method-HTTPValidationError-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{HTTPValidationError$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
