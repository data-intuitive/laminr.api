% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validation_error.R
\docType{class}
\name{ValidationError}
\alias{ValidationError}
\title{ValidationError}
\format{
An \code{R6Class} generator object
}
\description{
ValidationError Class

ValidationError Class
}
\details{
Create a new ValidationError
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{loc}}{list(\link{ValidationErrorLocInner})}

\item{\code{msg}}{character}

\item{\code{type}}{character}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ValidationError-new}{\code{ValidationError$new()}}
\item \href{#method-ValidationError-toJSON}{\code{ValidationError$toJSON()}}
\item \href{#method-ValidationError-fromJSON}{\code{ValidationError$fromJSON()}}
\item \href{#method-ValidationError-toJSONString}{\code{ValidationError$toJSONString()}}
\item \href{#method-ValidationError-fromJSONString}{\code{ValidationError$fromJSONString()}}
\item \href{#method-ValidationError-validateJSON}{\code{ValidationError$validateJSON()}}
\item \href{#method-ValidationError-toString}{\code{ValidationError$toString()}}
\item \href{#method-ValidationError-isValid}{\code{ValidationError$isValid()}}
\item \href{#method-ValidationError-getInvalidFields}{\code{ValidationError$getInvalidFields()}}
\item \href{#method-ValidationError-print}{\code{ValidationError$print()}}
\item \href{#method-ValidationError-clone}{\code{ValidationError$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ValidationError-new"></a>}}
\if{latex}{\out{\hypertarget{method-ValidationError-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new ValidationError class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ValidationError$new(loc, msg, type, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{loc}}{loc}

\item{\code{msg}}{msg}

\item{\code{type}}{type}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ValidationError-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ValidationError-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ValidationError$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
ValidationError in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ValidationError-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ValidationError-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of ValidationError
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ValidationError$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of ValidationError
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ValidationError-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-ValidationError-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ValidationError$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
ValidationError in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ValidationError-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-ValidationError-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of ValidationError
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ValidationError$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of ValidationError
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ValidationError-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ValidationError-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to ValidationError and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ValidationError$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ValidationError-toString"></a>}}
\if{latex}{\out{\hypertarget{method-ValidationError-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ValidationError$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of ValidationError
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ValidationError-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-ValidationError-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ValidationError$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ValidationError-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-ValidationError-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ValidationError$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ValidationError-print"></a>}}
\if{latex}{\out{\hypertarget{method-ValidationError-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ValidationError$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ValidationError-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ValidationError-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ValidationError$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
